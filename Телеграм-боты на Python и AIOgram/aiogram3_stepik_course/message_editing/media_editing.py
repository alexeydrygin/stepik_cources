from aiogram import Bot, Dispatcher
from aiogram.types import (CallbackQuery, InlineKeyboardButton,
                           InlineKeyboardMarkup, InputMediaAudio,
                           InputMediaDocument, InputMediaPhoto,
                           InputMediaVideo, Message)
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters import CommandStart, Text
from aiogram.exceptions import TelegramBadRequest

# –í–º–µ—Å—Ç–æ BOT TOKEN HERE –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞,
# –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —É @BotFather
BOT_TOKEN = 'BOT TOKEN HERE'

bot: Bot = Bot(BOT_TOKEN)
dp: Dispatcher = Dispatcher()


LEXICON: dict[str, str] = {
    'audio': 'üé∂ –ê—É–¥–∏–æ',
    'text': 'üìÉ –¢–µ–∫—Å—Ç',
    'photo': 'üñº –§–æ—Ç–æ',
    'video': 'üé¨ –í–∏–¥–µ–æ',
    'document': 'üìë –î–æ–∫—É–º–µ–Ω—Ç',
    'voice': 'üì¢ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
    'text_1': '–≠—Ç–æ –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ–≥–æ –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–º —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –Ω–æ –Ω–µ–ª—å–∑—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å –º–µ–¥–∏–∞.',
    'text_2': '–≠—Ç–æ —Ç–æ–∂–µ –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –¥—Ä—É–≥–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.',
    'photo_id1': 'AgACAgIAAxkBAAIU5WPJSt9TUFzUwbCqewIUNtp9gJBYAAIJxTEbp5JJSvDAdS74pTGAAQADAgADcwADLQQ',
    'photo_id2': 'AgACAgIAAxkBAAIU_WPJgB1KZiyEIu4OikbsEsJInzV-AALxxTEbp5JJSnu2IKkQdDDQAQADAgADcwADLQQ',
    'voice_id1': 'AwACAgIAAxkBAAIU52PJSwWbxtBrhoL8o3njUdvNaHckAALZJwACp5JJStGYVdp4u5cILQQ',
    'voice_id2': 'AwACAgIAAxkBAAIU9mPJfLxFoKpSTie3CZFL3PcFfTHhAAKWKQACp5JJSqoWOXKpDRntLQQ',
    'audio_id1': 'CQACAgIAAxkBAAIVRWPKsPl83xynqlF9YvF5MRyF9GxeAAL1JAACkhBZSmyFCDY61yX8LQQ',
    'audio_id2': 'CQACAgIAAxkBAAIVR2PKsXppkdhAnOlqwpOHDJivtfvJAAL4JAACkhBZSoMVyPSB59h5LQQ',
    'document_id1': 'BQACAgIAAxkBAAIVEmPKY_5RcBfEMeQ55X02PNimd1FdAAJ1IwACkhBRSmszrVZWfOY6LQQ',
    'document_id2': 'BQACAgIAAxkBAAIVFGPKZCYnp07PHr_OwXIKo5Z8fxcEAAJ3IwACkhBRSoZiZmUOrb4nLQQ',
    'video_id1': 'BAACAgIAAxkBAAIVFmPKZL_cgfokLm3pBU5w3zspn3-lAAJ5IwACkhBRSs4Lk37jVF8xLQQ',
    'video_id2': 'BAACAgIAAxkBAAIVGGPKZTURYRphKtnnVFHy8Oa6OxPXAAJ6IwACkhBRSnfUGQW2UKeBLQQ',
    }


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
def get_markup(width: int, *args, **kwargs) -> InlineKeyboardMarkup:
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä
    kb_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    buttons: list[InlineKeyboardButton] = []
    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ args –∏ kwargs
    if args:
        for button in args:
            buttons.append(InlineKeyboardButton(
                text=LEXICON[button] if button in LEXICON else button,
                callback_data=button))
    if kwargs:
        for button, text in kwargs.items():
            buttons.append(InlineKeyboardButton(
                text=text,
                callback_data=button))
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –±–∏–ª–¥–µ—Ä –º–µ—Ç–æ–¥–æ–º row c –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º width
    kb_builder.row(*buttons, width=width)
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    return kb_builder.as_markup()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
@dp.message(CommandStart())
async def process_start_command(message: Message):
    markup = get_markup(2, 'photo')
    await message.answer_photo(
                        photo=LEXICON['photo_id1'],
                        caption='–≠—Ç–æ —Ñ–æ—Ç–æ 1',
                        reply_markup=markup)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
@dp.callback_query(Text(text=['text',
                              'audio',
                              'video',
                              'document',
                              'photo',
                              'voice']))
async def process_button_press(callback: CallbackQuery, bot: Bot):
    markup = get_markup(2, 'photo')
    try:
        await bot.edit_message_media(
                            chat_id=callback.message.chat.id,
                            message_id=callback.message.message_id,
                            media=InputMediaPhoto(
                                    media=LEXICON['photo_id2'],
                                    caption='–≠—Ç–æ —Ñ–æ—Ç–æ 2'),
                            reply_markup=markup)
    except TelegramBadRequest:
        await bot.edit_message_media(
                            chat_id=callback.message.chat.id,
                            message_id=callback.message.message_id,
                            media=InputMediaPhoto(
                                    media=LEXICON['photo_id1'],
                                    caption='–≠—Ç–æ —Ñ–æ—Ç–æ 1'),
                            reply_markup=markup)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message()
async def send_echo(message: Message):
    print(message)
    await message.answer(
            text='–ù–µ –ø–æ–Ω–∏–º–∞—é')


if __name__ == '__main__':
    dp.run_polling(bot)
